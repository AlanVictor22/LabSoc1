Crie uma aplicação web completa usando Python com Flask, simulando um Painel de Análise de Segurança (SOC Dashboard).  A aplicação deve conter:  1. Back-end (Flask) Estrutura de projeto com app/, templates/, static/, run.py e requirements.txt.  Rotas para:  Página inicial (/)  Upload de arquivos de log (/upload)  Visualização de incidentes simulados (/incidentes)  Lógica para ler arquivos .log e exibir os dados de forma organizada.  Simulação de alerta de segurança baseado em palavras-chave nos logs (ex: "failed", "unauthorized", "malware").  2. Front-end (HTML + CSS + JS ou Tailwind/Bootstrap) Layout estilo dashboard SOC com:  Sidebar com links para: Dashboard, Logs, Incidentes, Configurações.  Header com nome do sistema ("SOC Lab"), e ícone de notificação.  Cards no dashboard (ex: "Incidentes hoje", "Logs analisados", "Alertas críticos").  Tabela interativa para listar os logs/alertas encontrados.  Gráficos (simples) com Chart.js ou ApexCharts simulando estatísticas.  Responsivo e com visual moderno.  3. Extras Interface de upload de arquivos .log ou .txt.  Página de visualização de logs processados.  Sistema de "detecção simples" que marca em vermelho palavras perigosas.  Comentários no código explicando cada parte.  Tecnologias obrigatórias: Python 3  Flask  HTML + CSS (TailwindCSS de preferência)  Jinja2  O objetivo é criar um ambiente simulado para estudo prático de cibersegurança, que possa ser integrado com ferramentas como Zeek, Wazuh e Elastic futuramente. O código precisa ser bem estruturado, comentado e pronto para ser modificado.